/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package aplikasimanajementugas;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JCheckBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.Timer;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;
import koneksi.koneksi;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Ghassan
 */
public class MainMenu extends javax.swing.JFrame {
private final Connection conn;
private DefaultTableModel tabmode;
private DefaultTableModel tabmodelist;
    /**
     * Creates new form MainMenu
     */
    private String currUser = "guest";
    private String memoId;

    public void setCurrUser(String currUser) {
        this.currUser = currUser;
    }
     
    private boolean modeTambah = false;
    
    private int x;
    private int y;
  
   
    
    public MainMenu(String suser) {
        this.currUser = suser;
        
        this.conn = new koneksi().connect();
        initComponents();
        
        daftarMemo.setTableHeader(null);
        daftarList.setTableHeader(null);
        daftarToday.setTableHeader(null);
        
        ShowMonth();                        //bulan
        ShowDateFormat("yyyy", txtTahun);   //tahun
        ShowDateFormat("dd",txtTanggal);    //tanggal
        ShowTime("HH:mm", txtTime);         //Jam & Menit
        
        hideButtonInit();                   //SEMBUNYIKAN TOMBOL EDIT DAN HAPUS SEBELUM MEMILIH MEMO
        disableTanggal();                   //SEMBUNYIKAN JCALENDAR SEBELUM EDIT ATAU TAMBAH MEMO
        
        gantiPanelSorting(pSortAlfabet);
        
        datatableToday();
        datatable();
        
        
        
        pBurgerMenu.setVisible(false);
        memoView.setVisible(true);
        memoEdit.setVisible(false);
        
    }
    
    private void hideButtonInit() {
        if (judulMemo.getText()== "" || judulMemo.getText()== null || !daftarMemo.isColumnSelected(0)){
            tEdit.setVisible(false);
            tHapus.setVisible(false);
            }
    }

//    void ShowDate() {
//    Date date = new Date();
//    SimpleDateFormat s = new SimpleDateFormat("dd");
//    txtTanggal.setText(s.format(date));
//    }
    
    void ShowMonth() {
    Date date = new Date();
    SimpleDateFormat s = new SimpleDateFormat("MM");
    switch (s.format(date)){
        case "01":
            txtBulan.setText("Jan");
            break;

        case "02":
            txtBulan.setText("Feb");
            break;

        case "03":
            txtBulan.setText("Mar");
            break;

        case "04":
            txtBulan.setText("Apr");
            break;

        case "05":
            txtBulan.setText("Mei");
            break;

        case "06":
            txtBulan.setText("Jun");
            break;

        case "07":
            txtBulan.setText("Jul");
            break;

        case "08":
            txtBulan.setText("Agu");
            break;

        case "09":
            txtBulan.setText("Sep");
            break;

        case "10":
            txtBulan.setText("Okt");
            break;

        case "11":
            txtBulan.setText("Nov");
            break;

        case "12":
            txtBulan.setText("Des");
            break;   
    }
    
    }

    
    void ShowDateFormat(String format, JLabel label) {
    Date date = new Date();
    SimpleDateFormat s = new SimpleDateFormat(format);
    label.setText(s.format(date));
    }
    
 
    void ShowTime(String format, JLabel label) {
        new Timer(1000, new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                Date time = new Date();
                SimpleDateFormat s = new SimpleDateFormat(format);
                label.setText(s.format(time));
            }
        }).start();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        radioGroupAlfabet = new javax.swing.ButtonGroup();
        radioGroupTanggal = new javax.swing.ButtonGroup();
        frameMove = new javax.swing.JLabel();
        Icon = new javax.swing.JLabel();
        pBurgerMenu = new javax.swing.JPanel();
        tExit = new javax.swing.JLabel();
        tLogOut = new javax.swing.JLabel();
        tAbout = new javax.swing.JLabel();
        tOpenSettings = new javax.swing.JLabel();
        burgerItems = new javax.swing.JLabel();
        burgerMenu = new javax.swing.JLabel();
        descTxt = new javax.swing.JLabel();
        txtTime = new javax.swing.JLabel();
        tDahsboard = new javax.swing.JLabel();
        tVM = new javax.swing.JLabel();
        tReport = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        frame = new javax.swing.JLabel();
        panelLayar = new javax.swing.JLayeredPane();
        pDashboard = new javax.swing.JPanel();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        txtTahun = new javax.swing.JLabel();
        txtBulan = new javax.swing.JLabel();
        txtTanggal = new javax.swing.JLabel();
        tugasToday = new javax.swing.JLabel();
        tugasToday1 = new javax.swing.JLabel();
        scrollDaftarToday = new javax.swing.JScrollPane();
        daftarToday = new javax.swing.JTable();
        noTaskLabel = new javax.swing.JLabel();
        menuDashboard = new javax.swing.JLabel();
        bg = new javax.swing.JLabel();
        pViewMemo = new javax.swing.JPanel();
        sorting = new javax.swing.JPanel();
        sortingOptions = new javax.swing.JComboBox<>();
        tSortingTugas = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        panelSorting = new javax.swing.JLayeredPane();
        pSortTanggal = new javax.swing.JPanel();
        tanggalTarget = new javax.swing.JRadioButton();
        tanggalDibuat = new javax.swing.JRadioButton();
        jDateChooserDibuat = new com.toedter.calendar.JDateChooser();
        jDateChooserTarget = new com.toedter.calendar.JDateChooser();
        pSortAlfabet = new javax.swing.JPanel();
        alfabetAsc = new javax.swing.JRadioButton();
        alfabetDescend = new javax.swing.JRadioButton();
        pSortKategori = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        tambah = new javax.swing.JButton();
        memoView = new javax.swing.JPanel();
        judulMemo = new javax.swing.JTextField();
        scrollIsiMemo = new javax.swing.JScrollPane();
        isiMemo = new javax.swing.JTextArea();
        scrollToDo = new javax.swing.JScrollPane();
        toDo = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        daftarList = new javax.swing.JTable();
        tEdit = new javax.swing.JButton();
        tHapus = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        lTarget = new javax.swing.JLabel();
        ttarget = new javax.swing.JLabel();
        lCreated = new javax.swing.JLabel();
        lEdited = new javax.swing.JLabel();
        lId = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        daftarMemo = new javax.swing.JTable();
        memoEdit = new javax.swing.JPanel();
        tAddToDo = new javax.swing.JTextField();
        scrollToDoEdit = new javax.swing.JScrollPane();
        toDoEdit = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        daftarList1 = new javax.swing.JTable();
        scrollIsiMemoEdit = new javax.swing.JScrollPane();
        isiMemoEdit = new javax.swing.JTextArea();
        judulMemoEdit = new javax.swing.JTextField();
        tSimpan = new javax.swing.JButton();
        tBatal = new javax.swing.JButton();
        bAddToDo = new javax.swing.JButton();
        dateTarget = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        menuMemo = new javax.swing.JLabel();
        bg1 = new javax.swing.JLabel();
        pReport = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        bg2 = new javax.swing.JLabel();
        menuReport = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("WALACH LIST");
        setUndecorated(true);
        setResizable(false);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        frameMove.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                frameMoveMouseDragged(evt);
            }
        });
        frameMove.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                frameMoveMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                frameMoveMousePressed(evt);
            }
        });
        getContentPane().add(frameMove, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 860, 30));

        Icon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplikasimanajementugas/image/Icon.png"))); // NOI18N
        getContentPane().add(Icon, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 40, 30));

        pBurgerMenu.setOpaque(false);
        pBurgerMenu.setLayout(null);

        tExit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tExitMouseClicked(evt);
            }
        });
        pBurgerMenu.add(tExit);
        tExit.setBounds(20, 140, 150, 20);

        tLogOut.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tLogOut.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tLogOutMouseClicked(evt);
            }
        });
        pBurgerMenu.add(tLogOut);
        tLogOut.setBounds(20, 100, 130, 20);

        tAbout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tAbout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tAboutMousePressed(evt);
            }
        });
        pBurgerMenu.add(tAbout);
        tAbout.setBounds(30, 60, 100, 20);

        tOpenSettings.setBackground(new java.awt.Color(255, 255, 255));
        tOpenSettings.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tOpenSettings.setForeground(new java.awt.Color(102, 102, 102));
        tOpenSettings.setText("SETTING");
        tOpenSettings.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tOpenSettings.setOpaque(true);
        tOpenSettings.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tOpenSettingsMousePressed(evt);
            }
        });
        pBurgerMenu.add(tOpenSettings);
        tOpenSettings.setBounds(60, 10, 120, 30);

        burgerItems.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplikasimanajementugas/image/menu.png"))); // NOI18N
        burgerItems.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                burgerItemsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                burgerItemsMouseExited(evt);
            }
        });
        pBurgerMenu.add(burgerItems);
        burgerItems.setBounds(0, 0, 201, 182);

        getContentPane().add(pBurgerMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 40, 200, 180));

        burgerMenu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        burgerMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                burgerMenuMouseClicked(evt);
            }
        });
        getContentPane().add(burgerMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 0, 30, 30));

        descTxt.setBackground(new java.awt.Color(255, 255, 255));
        descTxt.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        descTxt.setForeground(new java.awt.Color(153, 153, 153));
        descTxt.setText("Hallo " + currUser);
        getContentPane().add(descTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 40, 220, 60));

        txtTime.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtTime.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtTime.setText("HH:MM");
        getContentPane().add(txtTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 0, 60, 30));

        tDahsboard.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        tDahsboard.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tDahsboard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tDahsboardMouseClicked(evt);
            }
        });
        getContentPane().add(tDahsboard, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, 130, 40));

        tVM.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tVM.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tVMMouseClicked(evt);
            }
        });
        getContentPane().add(tVM, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 50, 130, 40));

        tReport.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tReport.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tReportMouseClicked(evt);
            }
        });
        getContentPane().add(tReport, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 50, 80, 40));

        jLabel1.setFont(new java.awt.Font("Franklin Gothic Medium Cond", 0, 24)); // NOI18N
        jLabel1.setText("WALACH LIST");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 0, 210, 30));

        frame.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplikasimanajementugas/image/frame.png"))); // NOI18N
        getContentPane().add(frame, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        panelLayar.setLayout(new java.awt.CardLayout());

        pDashboard.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        pDashboard.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 462, 380, 20));

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        pDashboard.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 462, 20, 130));

        txtTahun.setFont(new java.awt.Font("Tahoma", 0, 60)); // NOI18N
        txtTahun.setForeground(new java.awt.Color(102, 102, 102));
        txtTahun.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtTahun.setText("YYYY");
        pDashboard.add(txtTahun, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 470, 160, 100));

        txtBulan.setFont(new java.awt.Font("Tahoma", 0, 60)); // NOI18N
        txtBulan.setForeground(new java.awt.Color(102, 102, 102));
        txtBulan.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtBulan.setText("MMM");
        pDashboard.add(txtBulan, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 470, 140, 100));

        txtTanggal.setFont(new java.awt.Font("Tahoma", 0, 80)); // NOI18N
        txtTanggal.setForeground(new java.awt.Color(102, 102, 102));
        txtTanggal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtTanggal.setText("DD");
        pDashboard.add(txtTanggal, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 360, 130, 90));

        tugasToday.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        tugasToday.setForeground(new java.awt.Color(153, 153, 153));
        tugasToday.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tugasToday.setText("Tanggal Hari Ini");
        pDashboard.add(tugasToday, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 310, 380, 30));

        tugasToday1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        tugasToday1.setForeground(new java.awt.Color(153, 153, 153));
        tugasToday1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tugasToday1.setText("Tugas Hari Ini");
        pDashboard.add(tugasToday1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 310, 370, 30));

        daftarToday.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scrollDaftarToday.setViewportView(daftarToday);
        if (daftarToday.getColumnModel().getColumnCount() > 0) {
            daftarToday.getColumnModel().getColumn(0).setResizable(false);
        }

        pDashboard.add(scrollDaftarToday, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 360, 390, 230));

        noTaskLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        noTaskLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        noTaskLabel.setText("Tidak ada Tugas hari ini :)");
        pDashboard.add(noTaskLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 350, 400, 240));

        menuDashboard.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplikasimanajementugas/image/menu-dashboard.png"))); // NOI18N
        pDashboard.add(menuDashboard, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, -1, -1));

        bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplikasimanajementugas/image/main-dashboard.png"))); // NOI18N
        pDashboard.add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, -1, -1));

        panelLayar.add(pDashboard, "card2");

        pViewMemo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        sorting.setBackground(new java.awt.Color(255, 255, 255));
        sorting.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        sortingOptions.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Alfabet", "Tanggal", "Kategori", "Status" }));
        sortingOptions.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                sortingOptionsItemStateChanged(evt);
            }
        });
        sortingOptions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortingOptionsActionPerformed(evt);
            }
        });
        sorting.add(sortingOptions, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 180, -1));

        tSortingTugas.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tSortingTugas.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tSortingTugas.setText("MENU SORTING");
        sorting.add(tSortingTugas, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 200, 20));
        sorting.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 200, 10));

        panelSorting.setMinimumSize(new java.awt.Dimension(81, 63));
        panelSorting.setLayout(new java.awt.CardLayout());

        pSortTanggal.setMaximumSize(new java.awt.Dimension(156, 23));
        pSortTanggal.setMinimumSize(new java.awt.Dimension(156, 23));
        pSortTanggal.setPreferredSize(new java.awt.Dimension(156, 23));
        pSortTanggal.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        radioGroupTanggal.add(tanggalTarget);
        tanggalTarget.setText("Tanggal target");
        tanggalTarget.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tanggalTargetActionPerformed(evt);
            }
        });
        pSortTanggal.add(tanggalTarget, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, -1, -1));

        radioGroupTanggal.add(tanggalDibuat);
        tanggalDibuat.setText("Tanggal Dibuat");
        tanggalDibuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tanggalDibuatActionPerformed(evt);
            }
        });
        pSortTanggal.add(tanggalDibuat, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, -1, -1));
        pSortTanggal.add(jDateChooserDibuat, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, -1, -1));
        pSortTanggal.add(jDateChooserTarget, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 50, -1, -1));

        panelSorting.add(pSortTanggal, "card2");

        pSortAlfabet.setLayout(new javax.swing.BoxLayout(pSortAlfabet, javax.swing.BoxLayout.X_AXIS));

        radioGroupAlfabet.add(alfabetAsc);
        alfabetAsc.setText("Ascending");
        pSortAlfabet.add(alfabetAsc);

        radioGroupAlfabet.add(alfabetDescend);
        alfabetDescend.setText("Descending");
        alfabetDescend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alfabetDescendActionPerformed(evt);
            }
        });
        pSortAlfabet.add(alfabetDescend);

        panelSorting.add(pSortAlfabet, "card2");

        pSortKategori.setMaximumSize(new java.awt.Dimension(156, 23));
        pSortKategori.setMinimumSize(new java.awt.Dimension(156, 23));
        pSortKategori.setPreferredSize(new java.awt.Dimension(156, 23));
        pSortKategori.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane5.setViewportView(jList1);

        pSortKategori.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 200, 80));

        panelSorting.add(pSortKategori, "card2");

        sorting.add(panelSorting, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 200, 80));

        pViewMemo.add(sorting, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 200, 150));

        tambah.setText("TAMBAH");
        tambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambahActionPerformed(evt);
            }
        });
        pViewMemo.add(tambah, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 580, 200, -1));

        memoView.setBackground(new java.awt.Color(255, 255, 255));
        memoView.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        judulMemo.setEditable(false);
        judulMemo.setBackground(new java.awt.Color(255, 255, 255));
        judulMemo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        judulMemo.setText("Do it because it must be done");
        judulMemo.setBorder(null);
        judulMemo.setCaretColor(new java.awt.Color(204, 204, 204));
        judulMemo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                judulMemoActionPerformed(evt);
            }
        });
        memoView.add(judulMemo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, 350, -1));

        scrollIsiMemo.setBorder(null);
        scrollIsiMemo.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        isiMemo.setEditable(false);
        isiMemo.setColumns(20);
        isiMemo.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        isiMemo.setLineWrap(true);
        isiMemo.setRows(5);
        isiMemo.setText("You’ll do it because it must be done. \nYou’ll do it because nobody else can. \nAnd if you don’t, millions will die. \nIf you tell me that’s not enough, \nI won’t believe you. This is what has \nalways set ourpeople apart. \nA thousand years of sacrificein our veins. And every generation must know its own \nsuffering. \nI spit on the people who did this, and I \ncurse the price I have to pay. \nBut I’m making my peace with it, \nand now you make yours. \nBecause it must be done.\n\n\t-Boris Shcherbina (Chernobyl)");
        isiMemo.setToolTipText("");
        isiMemo.setBorder(null);
        scrollIsiMemo.setViewportView(isiMemo);

        memoView.add(scrollIsiMemo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 350, 430));

        scrollToDo.setFocusable(false);
        scrollToDo.setRequestFocusEnabled(false);

        toDo.setFocusable(false);
        toDo.setLayout(new java.awt.GridLayout(0, 1, 2, 2));

        daftarList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        daftarList.setFocusable(false);
        daftarList.setGridColor(new java.awt.Color(255, 255, 255));
        daftarList.setIntercellSpacing(new java.awt.Dimension(2, 2));
        jScrollPane4.setViewportView(daftarList);
        if (daftarList.getColumnModel().getColumnCount() > 0) {
            daftarList.getColumnModel().getColumn(0).setMinWidth(25);
            daftarList.getColumnModel().getColumn(0).setPreferredWidth(25);
            daftarList.getColumnModel().getColumn(0).setMaxWidth(30);
            daftarList.getColumnModel().getColumn(1).setMinWidth(100);
            daftarList.getColumnModel().getColumn(1).setPreferredWidth(100);
        }

        toDo.add(jScrollPane4);

        scrollToDo.setViewportView(toDo);

        memoView.add(scrollToDo, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 50, 230, 240));

        tEdit.setText("EDIT");
        tEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tEditActionPerformed(evt);
            }
        });
        memoView.add(tEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 310, -1, -1));

        tHapus.setText("HAPUS");
        tHapus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tHapusMouseClicked(evt);
            }
        });
        tHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tHapusActionPerformed(evt);
            }
        });
        memoView.add(tHapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 310, -1, -1));
        memoView.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 370, 20));

        jSeparator5.setOrientation(javax.swing.SwingConstants.VERTICAL);
        memoView.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 10, 10, 30));
        memoView.add(lTarget, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 30, 90, 20));

        ttarget.setText(" target : ");
        memoView.add(ttarget, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 30, -1, -1));

        lCreated.setText("Createed :");
        memoView.add(lCreated, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 10, 110, -1));

        lEdited.setText("Edited : -");
        memoView.add(lEdited, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 10, 110, -1));

        lId.setForeground(new java.awt.Color(255, 255, 255));
        lId.setText("jLabel1");
        memoView.add(lId, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 30, -1, -1));

        pViewMemo.add(memoView, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 120, 610, 490));

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setBorder(null);
        jScrollPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        daftarMemo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        daftarMemo.setGridColor(new java.awt.Color(255, 255, 255));
        daftarMemo.setOpaque(false);
        daftarMemo.setRowSelectionAllowed(false);
        daftarMemo.setShowHorizontalLines(false);
        daftarMemo.setShowVerticalLines(false);
        daftarMemo.getTableHeader().setResizingAllowed(false);
        daftarMemo.getTableHeader().setReorderingAllowed(false);
        daftarMemo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                daftarMemoMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                daftarMemoMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                daftarMemoMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(daftarMemo);
        if (daftarMemo.getColumnModel().getColumnCount() > 0) {
            daftarMemo.getColumnModel().getColumn(0).setResizable(false);
            daftarMemo.getColumnModel().getColumn(0).setPreferredWidth(50);
            daftarMemo.getColumnModel().getColumn(1).setResizable(false);
        }

        pViewMemo.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, 200, 290));

        memoEdit.setBackground(new java.awt.Color(255, 255, 255));
        memoEdit.setEnabled(false);
        memoEdit.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tAddToDo.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        memoEdit.add(tAddToDo, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 30, 180, -1));

        scrollToDoEdit.setFocusable(false);
        scrollToDoEdit.setRequestFocusEnabled(false);

        toDoEdit.setFocusable(false);
        toDoEdit.setLayout(new java.awt.GridLayout(0, 1, 2, 2));

        daftarList1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        daftarList1.setFocusable(false);
        daftarList1.setGridColor(new java.awt.Color(255, 255, 255));
        daftarList1.setIntercellSpacing(new java.awt.Dimension(2, 2));
        jScrollPane6.setViewportView(daftarList1);
        if (daftarList1.getColumnModel().getColumnCount() > 0) {
            daftarList1.getColumnModel().getColumn(0).setMinWidth(25);
            daftarList1.getColumnModel().getColumn(0).setPreferredWidth(25);
            daftarList1.getColumnModel().getColumn(0).setMaxWidth(30);
            daftarList1.getColumnModel().getColumn(1).setMinWidth(100);
            daftarList1.getColumnModel().getColumn(1).setPreferredWidth(100);
        }

        toDoEdit.add(jScrollPane6);

        scrollToDoEdit.setViewportView(toDoEdit);

        memoEdit.add(scrollToDoEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 50, 230, 240));

        scrollIsiMemoEdit.setBorder(null);
        scrollIsiMemoEdit.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        isiMemoEdit.setColumns(20);
        isiMemoEdit.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        isiMemoEdit.setLineWrap(true);
        isiMemoEdit.setRows(5);
        isiMemoEdit.setToolTipText("");
        isiMemoEdit.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        scrollIsiMemoEdit.setViewportView(isiMemoEdit);

        memoEdit.add(scrollIsiMemoEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 360, 440));

        judulMemoEdit.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        judulMemoEdit.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        judulMemoEdit.setCaretColor(new java.awt.Color(204, 204, 204));
        judulMemoEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                judulMemoEditActionPerformed(evt);
            }
        });
        memoEdit.add(judulMemoEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, 350, -1));

        tSimpan.setText("SIMPAN");
        tSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tSimpanActionPerformed(evt);
            }
        });
        memoEdit.add(tSimpan, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 360, -1, -1));

        tBatal.setText("BATAL");
        tBatal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tBatalMouseClicked(evt);
            }
        });
        memoEdit.add(tBatal, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 360, -1, -1));

        bAddToDo.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        bAddToDo.setText("ADD");
        bAddToDo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAddToDoActionPerformed(evt);
            }
        });
        memoEdit.add(bAddToDo, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 30, 50, 20));

        dateTarget.setDateFormatString("yyyy-MM-dd");
        dateTarget.setMaxSelectableDate(new java.util.Date(253370743301000L));
        dateTarget.setMinSelectableDate(new java.util.Date(-62135791099000L));
        memoEdit.add(dateTarget, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 300, 120, -1));

        jLabel2.setText("TARGET/DEADLINE : ");
        memoEdit.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 300, -1, 20));

        pViewMemo.add(memoEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 120, 610, 490));

        menuMemo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplikasimanajementugas/image/menu-memo.png"))); // NOI18N
        menuMemo.setToolTipText("");
        pViewMemo.add(menuMemo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, -1, 70));

        bg1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplikasimanajementugas/image/main-memo.png"))); // NOI18N
        pViewMemo.add(bg1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, -1, 540));

        panelLayar.add(pViewMemo, "card2");

        pReport.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setText("Cetak User");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        pReport.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 440, 180, -1));

        jButton2.setText("Cetak Memo");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton2MousePressed(evt);
            }
        });
        pReport.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 440, 170, -1));

        bg2.setFont(new java.awt.Font("Forte", 0, 11)); // NOI18N
        bg2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplikasimanajementugas/image/main-report.png"))); // NOI18N
        pReport.add(bg2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, -1, -1));

        menuReport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplikasimanajementugas/image/menu-report.png"))); // NOI18N
        pReport.add(menuReport, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, -1, -1));

        panelLayar.add(pReport, "card2");

        getContentPane().add(panelLayar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tReportMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tReportMouseClicked
        gantiPanel(pReport);
    }//GEN-LAST:event_tReportMouseClicked

    private void tVMMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tVMMouseClicked
        gantiPanel(pViewMemo);
    }//GEN-LAST:event_tVMMouseClicked

    private void tEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tEditActionPerformed

//            if (daftarMemo.isColumnSelected(0)){
                memoView.setVisible(false);
                memoEdit.setVisible(true);
                hideButtonInit();
                judulMemoEdit.setText(judulMemo.getText());
                isiMemoEdit.setText(isiMemo.getText());
                String sDate=lTarget.getText();  
                Date dateT;
             try {
                dateT = new SimpleDateFormat("yyyy-MM-dd").parse(sDate);
                dateTarget.setDate(dateT);
                 System.out.println(dateT);
             } catch (ParseException ex) {
                 System.out.println(ex);;
             }
                daftarMemo.setEnabled(false);
                isiMemoEdit.setCaretPosition(0);
//            } else {
//                        
//            }
            
    }//GEN-LAST:event_tEditActionPerformed

    private void tambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambahActionPerformed
            // TODO add your handling code here:
            judulMemo.setText("");
            isiMemo.setText("");
            judulMemoEdit.setText("");
            isiMemoEdit.setText("");
            memoView.setVisible(false);
            memoEdit.setVisible(true);
            modeTambah = true;
            daftarMemo.setEnabled(false);
    }//GEN-LAST:event_tambahActionPerformed
            Date dateT;
    private void tSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tSimpanActionPerformed
        // TODO add your handling code here:
        if((judulMemoEdit.getText() != "" || judulMemoEdit.getText() != null) && modeTambah == true){
            
            String sDate=dateTarget.getDate().toString();
            System.out.println(dateTarget.getDateFormatString());

//             try {
//                dateT = new SimpleDateFormat("yyyy-MM-dd").parse(sDate);
//                 System.out.println(dateT);
//             } catch (ParseException ex) {
//                 System.out.println(ex);;
//             }
             java.sql.Date dateIn = new java.sql.Date(dateTarget.getDate().getTime());
             System.out.println(dateIn);

//            String strDate = DateFormat.getDateInstance().format(date);
            
            String sql = "Insert into memo (judul, isi, username, tanggal_dibuat, tanggal_target, terakhir_diedit) "
                          + "   VALUES ('"+escapeMetaCharacters(judulMemoEdit.getText())+"'"
                          + ", '"+escapeMetaCharacters(isiMemoEdit.getText())+"'"
                          + ", '"+currUser+"'"
                          + ", CURDATE()"    // tanggal dibuat
                          + ", '"+dateIn+"'"   //tanggal targer
                          + ", CURDATE());"; //terakhir diedit
                          
                          
            try {
            java.sql.Statement stat = conn.createStatement();
            stat.execute(sql);        
            } 
            catch (Exception e){System.out.println("error" + e);}      
            
        modeTambah =false;
        daftarMemo.setEnabled(true);

        judulMemo.setText("");
        isiMemo.setText("");
        judulMemoEdit.setText("");
        isiMemoEdit.setText("");
        memoView.setVisible(true);
        memoEdit.setVisible(false);
        hideButtonInit();

        datatable();
        datatableToday();
        
        }
        
        else if (judulMemoEdit.getText() != "") {            
            
            
            java.sql.Date dateIn = new java.sql.Date(dateTarget.getDate().getTime());
             System.out.println(dateIn);
            
        String judulAwal = judulMemo.getText();
        String sql = "update memo set "
                + "judul = '"+escapeMetaCharacters(judulMemoEdit.getText())+"', "
                + "isi = '"+escapeMetaCharacters(isiMemoEdit.getText())+"', "
                + "tanggal_target='"+dateIn+"', "
                + "terakhir_diedit=CURDATE() "
                + "where judul = '"+judulAwal+"' "
                + "and id="+memoId+" "
                + "and username='"+currUser+"';";
        try {
        java.sql.Statement stat = conn.createStatement();
        stat.executeUpdate(sql);
        memoView.setVisible(true);
        memoEdit.setVisible(false);
        judulMemo.setText("");
        isiMemo.setText("");
        judulMemoEdit.setText("");
        isiMemoEdit.setText("");
        daftarMemo.setEnabled(true);

        datatable();
        datatableToday();
        memoId=null;
        } 
        catch (Exception e){
            System.out.println("error" + e);}
        } else {
        
        }
    }//GEN-LAST:event_tSimpanActionPerformed

    private void frameMoveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_frameMoveMouseClicked
        // TODO add your handling code here:
          
    }//GEN-LAST:event_frameMoveMouseClicked

    private void frameMoveMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_frameMoveMouseDragged
        // TODO add your handling code here:
        
          int mousex = evt.getXOnScreen();
        int mousey = evt.getYOnScreen();
        
        this.setLocation(mousex - x, mousey - y);
    }//GEN-LAST:event_frameMoveMouseDragged

    private void tDahsboardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tDahsboardMouseClicked
        // TODO add your handling code here
        gantiPanel(pDashboard);
    }//GEN-LAST:event_tDahsboardMouseClicked

    private void frameMoveMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_frameMoveMousePressed
        // TODO add your handling code here:
         x = evt.getX();
        y = evt.getY();
    }//GEN-LAST:event_frameMoveMousePressed

    private void burgerMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_burgerMenuMouseClicked
        // TODO add your handling code here:
        if (!pBurgerMenu.isVisible()) {
        pBurgerMenu.setVisible(true);
        } else {
            pBurgerMenu.setVisible(false);
        }
        
    }//GEN-LAST:event_burgerMenuMouseClicked

    private void sortingOptionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortingOptionsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sortingOptionsActionPerformed

    private void tBatalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tBatalMouseClicked
        // TODO add your handling code here:
            modeTambah = false;
            hideButtonInit();
            daftarMemo.setEnabled(true);
            memoView.setVisible(true);
            memoEdit.setVisible(false);
            
            

    }//GEN-LAST:event_tBatalMouseClicked

    private void bAddToDoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAddToDoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bAddToDoActionPerformed

    private void daftarMemoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_daftarMemoMouseClicked
        // TODO add your handling code here:
       
//        datatableList(b);
       
    }//GEN-LAST:event_daftarMemoMouseClicked

    private void sortingOptionsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_sortingOptionsItemStateChanged
        
        if (sortingOptions.getSelectedItem() == "Alfabet"){
         gantiPanelSorting(pSortAlfabet);
        } else if (sortingOptions.getSelectedItem() == "Tanggal"){
            gantiPanelSorting(pSortTanggal);
        }  else if (sortingOptions.getSelectedItem() == "Kategori"){
            gantiPanelSorting(pSortKategori);
        }
    }//GEN-LAST:event_sortingOptionsItemStateChanged

    private void alfabetDescendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alfabetDescendActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_alfabetDescendActionPerformed

    private void disableTanggal (){
        jDateChooserDibuat.setEnabled(false);
        jDateChooserTarget.setEnabled(false);
    }
    
    
    private void tanggalTargetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tanggalTargetActionPerformed
        // TODO add your handling code here:
        if (tanggalTarget.isSelected()) {
            jDateChooserTarget.setEnabled(true);
            jDateChooserDibuat.setEnabled(false);
        } else {
            jDateChooserTarget.setEnabled(false);
            jDateChooserDibuat.setEnabled(true);
        }
    }//GEN-LAST:event_tanggalTargetActionPerformed

    private void tanggalDibuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tanggalDibuatActionPerformed
        // TODO add your handling code here:
        if (tanggalDibuat.isSelected()) {
            jDateChooserDibuat.setEnabled(true);
            jDateChooserTarget.setEnabled(false);
        } else {
            jDateChooserDibuat.setEnabled(false);
            jDateChooserTarget.setEnabled(true);
        }
        
    }//GEN-LAST:event_tanggalDibuatActionPerformed

    private void tHapusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tHapusMouseClicked
        // TODO add your handling code here:
        int response = JOptionPane.showConfirmDialog(null, "Hapus Memo?","Konfirmasi Hapus", JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        
    if (response == 0){
        String sql = "DELETE FROM memo "
                + "WHERE judul='"+judulMemo.getText()+"' "
                + "AND username ='"+currUser+"'"
                + "AND id="+memoId+";";
            try {
            java.sql.Statement stat = conn.createStatement();
            stat.executeUpdate(sql);
            memoView.setVisible(true);
            memoEdit.setVisible(false);
            judulMemo.setText("");
            isiMemo.setText("");
            judulMemoEdit.setText("");
            isiMemoEdit.setText("");
                    hideButtonInit();

        datatable();
        datatableToday();
        
            } 
            catch (Exception e){
                System.out.println("error" + e);
            }
    }
    
    }//GEN-LAST:event_tHapusMouseClicked

    private void tHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tHapusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tHapusActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
   Connection con = null;
try {
String jdbcDriver = "com.mysql.jdbc.Driver";
Class.forName(jdbcDriver);

String url = "jdbc:mysql://localhost/wtl"; // database yang dibuat
String user = "root";   //user dari database
String pass ="";    //password database

con = DriverManager.getConnection(url, user, pass);
Statement stm = (Statement) con.createStatement();

try {

   String path=  System.getProperty("user.dir") + "/src/laporan/daftarUsers.jasper";
  Map parameter = new HashMap();
  JasperPrint print = JasperFillManager.fillReport(path,parameter,stm.getConnection());
  JasperViewer.viewReport(print, false);
} catch (Exception ex) {
  JOptionPane.showMessageDialog(rootPane,"Dokumen Tidak Ada"+ex);
}

} catch (Exception e) {
System.out.println(e);
}
    }//GEN-LAST:event_jButton1MouseClicked

    private void daftarMemoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_daftarMemoMousePressed
        // TODO add your handling code here:
         if (!tEdit.isVisible() || !tHapus.isVisible()){
        tEdit.setVisible(true);
        tHapus.setVisible(true);
//        memoView.repaint();
//        memoView.revalidate();
        }
        
        
        int bar = daftarMemo.getSelectedRow();
//        String a = tabmode.getValueAt(bar, 0).toString();
        String a = (String) daftarMemo.getModel().getValueAt(bar, 0);
        String b = tabmode.getValueAt (bar,1).toString();
        memoId = a;
        
        judulMemo.setText(b);
        
        
        
        
        String sql = "select isi, tanggal_dibuat, tanggal_target, terakhir_diedit from memo "
                + "where id="+a+" "
                + "and judul = '"+b+"' "
                + "and username='"+currUser+"';";
        try {
        java.sql.Statement stat = conn.createStatement();
        ResultSet hasil = stat.executeQuery(sql);
        while (hasil.next()){
            String isi = hasil.getString("isi");
            String created = hasil.getString("tanggal_dibuat");
            String target = hasil.getString("tanggal_target");
            String edited = hasil.getString("terakhir_diedit");
                        
            lCreated.setText("Created : "+created);
            lEdited.setText("Edited :"+edited);
            lTarget.setText(target);
            isiMemo.setText(isi);
            isiMemo.setCaretPosition(0);
            memoView.repaint();
            memoView.validate();
            
        }
        datatableList(b);
//        datatable();
//        datatableToday();
    }
    catch (Exception e){
        System.out.println(e);
    }
    }//GEN-LAST:event_daftarMemoMousePressed

    private void judulMemoEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_judulMemoEditActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_judulMemoEditActionPerformed

    private void tExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tExitMouseClicked
        // TODO add your handling code here:
        //        this.dispose();
        System.exit(0);
    }//GEN-LAST:event_tExitMouseClicked

    private void judulMemoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_judulMemoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_judulMemoActionPerformed

    private void burgerItemsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_burgerItemsMouseEntered
        // TODO add your handling code here:
        this.requestFocus(true);
    }//GEN-LAST:event_burgerItemsMouseEntered

    private void burgerItemsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_burgerItemsMouseExited
        // TODO add your handling code here:
        this.requestFocus(false);
    }//GEN-LAST:event_burgerItemsMouseExited

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
        if(pBurgerMenu.isVisible())
        {
         pBurgerMenu.setVisible(false);
        }
    }//GEN-LAST:event_formMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    private void tLogOutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tLogOutMouseClicked
        // TODO add your handling code here:
         this.dispose();
         new Login().setVisible(true);
    }//GEN-LAST:event_tLogOutMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tAboutMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tAboutMousePressed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Beta version release \nBY : GHASSAN \"BUMP\" FS ");

    }//GEN-LAST:event_tAboutMousePressed

    private void tOpenSettingsMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tOpenSettingsMousePressed
        // TODO add your handling code here:
        new Setting(currUser).setVisible(true);
    }//GEN-LAST:event_tOpenSettingsMousePressed

    private void daftarMemoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_daftarMemoMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_daftarMemoMouseReleased

    private void jButton2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MousePressed
        // TODO add your handling code here:
        Connection con = null;
try {
String jdbcDriver = "com.mysql.jdbc.Driver";
Class.forName(jdbcDriver);

String url = "jdbc:mysql://localhost/wtl"; // database yang dibuat
String user = "root";   //user dari database
String pass ="";    //password database

con = DriverManager.getConnection(url, user, pass);
Statement stm = (Statement) con.createStatement();

try {

   String path=  System.getProperty("user.dir") + "/src/laporan/tugas.jasper";
  Map parameter = new HashMap();
  JasperPrint print = JasperFillManager.fillReport(path,parameter,stm.getConnection());
  JasperViewer.viewReport(print, false);
} catch (Exception ex) {
  JOptionPane.showMessageDialog(rootPane,"Dokumen Tidak Ada"+ex);
}

} catch (Exception e) {
System.out.println(e);
}
    }//GEN-LAST:event_jButton2MousePressed

    public String escapeMetaCharacters(String inputString){
    final String[] metaCharacters = {"\\","^","$","{","}","[","]","(",")",".","*","+","?","|","<",">","-","&","%"};

//    for (int i = 0 ; i < metaCharacters.length ; i++){
//        if(inputString.contains(metaCharacters[i])){
//            inputString = inputString.replace(metaCharacters[i],"/"+metaCharacters[i]);
//            
//        }
//    }

//onli for formated text
    
    inputString = inputString.replace("'","''");
    return inputString;
}
   
    
    public void datatable(){
    Object[] Baris = {"",""};
    tabmode = new DefaultTableModel(null, Baris);
    daftarMemo.setModel(tabmode);
    String sql = "select id, judul "
            + "from memo "
            + "where username ='"+currUser+"';";
    try {
        java.sql.Statement stat = conn.createStatement();
        ResultSet hasil = stat.executeQuery(sql);
        while (hasil.next()){
            String a = hasil.getString("id");
            String b = hasil.getString("judul");
            
            String[] data = {a,b};
            tabmode.addRow(data);
        }
    }
    catch (Exception e){
    }
    TableColumnModel tcm = daftarMemo.getColumnModel();
    tcm.removeColumn( tcm.getColumn(0) );
   
}
 
    public void datatableList(String memoJudul){
        toDo.removeAll();
    String sql = "select keterangan, namalist "
            + "from list "
            + "where "
            + "judulmemo='"+memoJudul+"' "
            + "&& username='"+currUser+"'";
    
    try {
        java.sql.Statement stat = conn.createStatement();
        ResultSet hasil = stat.executeQuery(sql);
        while (hasil.next()){
            String a = hasil.getString("id");
            String b = hasil.getString("judul");
            
            String[] data = {a,b};
            tabmode.addRow(data);
        }
    }
    catch (Exception e){
    }
    TableColumnModel tcm = daftarMemo.getColumnModel();
    tcm.removeColumn( tcm.getColumn(0) );
    }
    
    
    public void datatableToday(){
    Object[] Baris = {"",""};
    tabmode = new DefaultTableModel(null, Baris);
    daftarToday.setModel(tabmode);
    String sql = "select id, judul "
            + "from memo "
            + "where username ='"+currUser+"'"
            + " && tanggal_target = CURDATE();";
    try {
        java.sql.Statement stat = conn.createStatement();
        ResultSet hasil = stat.executeQuery(sql);
        while (hasil.next()){
            String a = hasil.getString("id");
            String b = hasil.getString("judul");
            
            String[] data = {a,b};
            tabmode.addRow(data);
        }
    }
    catch (Exception e){
    }
    int tugasHariIni = daftarToday.getRowCount();
        System.out.println(tugasHariIni);
    if (tugasHariIni == 0){
        daftarToday.setVisible(false);
        scrollDaftarToday.setVisible(false);
    }
    TableColumnModel tcm = daftarToday.getColumnModel();
    tcm.removeColumn( tcm.getColumn(0) );
   
}
    
    
    
    public void gantiPanel(JPanel panel){
        if (pBurgerMenu.isVisible()) {
        pBurgerMenu.setVisible(false);}
        
        panelLayar.removeAll();
        panelLayar.add(panel);
        panelLayar.repaint();
        panelLayar.revalidate();
        
        
       
    }
    
    public void gantiPanelSorting(JPanel panel){
        panelSorting.removeAll();
        panelSorting.add(panel);
        panelSorting.repaint();
        panelSorting.revalidate();
       
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
//                new MainMenu("Bump").setVisible(true);
//                
//                
//               
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Icon;
    private javax.swing.JRadioButton alfabetAsc;
    private javax.swing.JRadioButton alfabetDescend;
    private javax.swing.JButton bAddToDo;
    private javax.swing.JLabel bg;
    private javax.swing.JLabel bg1;
    private javax.swing.JLabel bg2;
    private javax.swing.JLabel burgerItems;
    private javax.swing.JLabel burgerMenu;
    private javax.swing.JTable daftarList;
    private javax.swing.JTable daftarList1;
    private javax.swing.JTable daftarMemo;
    private javax.swing.JTable daftarToday;
    private com.toedter.calendar.JDateChooser dateTarget;
    private javax.swing.JLabel descTxt;
    private javax.swing.JLabel frame;
    private javax.swing.JLabel frameMove;
    private javax.swing.JTextArea isiMemo;
    private javax.swing.JTextArea isiMemoEdit;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private com.toedter.calendar.JDateChooser jDateChooserDibuat;
    private com.toedter.calendar.JDateChooser jDateChooserTarget;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTextField judulMemo;
    private javax.swing.JTextField judulMemoEdit;
    private javax.swing.JLabel lCreated;
    private javax.swing.JLabel lEdited;
    private javax.swing.JLabel lId;
    private javax.swing.JLabel lTarget;
    private javax.swing.JPanel memoEdit;
    private javax.swing.JPanel memoView;
    private javax.swing.JLabel menuDashboard;
    private javax.swing.JLabel menuMemo;
    private javax.swing.JLabel menuReport;
    private javax.swing.JLabel noTaskLabel;
    private javax.swing.JPanel pBurgerMenu;
    private javax.swing.JPanel pDashboard;
    private javax.swing.JPanel pReport;
    private javax.swing.JPanel pSortAlfabet;
    private javax.swing.JPanel pSortKategori;
    private javax.swing.JPanel pSortTanggal;
    private javax.swing.JPanel pViewMemo;
    private javax.swing.JLayeredPane panelLayar;
    private javax.swing.JLayeredPane panelSorting;
    private javax.swing.ButtonGroup radioGroupAlfabet;
    private javax.swing.ButtonGroup radioGroupTanggal;
    private javax.swing.JScrollPane scrollDaftarToday;
    private javax.swing.JScrollPane scrollIsiMemo;
    private javax.swing.JScrollPane scrollIsiMemoEdit;
    private javax.swing.JScrollPane scrollToDo;
    private javax.swing.JScrollPane scrollToDoEdit;
    private javax.swing.JPanel sorting;
    private javax.swing.JComboBox<String> sortingOptions;
    private javax.swing.JLabel tAbout;
    private javax.swing.JTextField tAddToDo;
    private javax.swing.JButton tBatal;
    private javax.swing.JLabel tDahsboard;
    private javax.swing.JButton tEdit;
    private javax.swing.JLabel tExit;
    private javax.swing.JButton tHapus;
    private javax.swing.JLabel tLogOut;
    private javax.swing.JLabel tOpenSettings;
    private javax.swing.JLabel tReport;
    private javax.swing.JButton tSimpan;
    private javax.swing.JLabel tSortingTugas;
    private javax.swing.JLabel tVM;
    private javax.swing.JButton tambah;
    private javax.swing.JRadioButton tanggalDibuat;
    private javax.swing.JRadioButton tanggalTarget;
    private javax.swing.JPanel toDo;
    private javax.swing.JPanel toDoEdit;
    private javax.swing.JLabel ttarget;
    private javax.swing.JLabel tugasToday;
    private javax.swing.JLabel tugasToday1;
    private javax.swing.JLabel txtBulan;
    private javax.swing.JLabel txtTahun;
    private javax.swing.JLabel txtTanggal;
    private javax.swing.JLabel txtTime;
    // End of variables declaration//GEN-END:variables

    
    
}
